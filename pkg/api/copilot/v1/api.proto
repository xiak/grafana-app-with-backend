syntax = "proto3";

package ads.service.copilot.v1;

import "google/api/annotations.proto";

option go_package = "github.com/xiak/grafana-app-with-backend/copilot/v1;v1";

// GetSecurityAbnormalUser
message GetSecurityAbnormalUserRequest {
    int64 start_time = 1;
    int64 end_time = 2;
}

message GetSecurityAbnormalUserReply {
    string domain = 1;
    repeated AbnormalUser abnormal_user = 2;
}

message AbnormalUser {
    // Login username
    string User = 1;
    // Standard, Admin, Guest, others...
    string privilege = 2;
    // Login status
    string status = 3;
    // Login message
    string login_message = 4;
    // Directory Access Logs
    repeated Journal journal = 5;
    // Login time
    int64 login_time = 6;
    // Logout time
    int64 logout_time = 7;
    // Online time
    int64 online = 8;
}

message Journal {
    // which directory
	  string directory = 1;
	  // Directory Access Status
	  string status = 2;
	  // Directory Access Message
	  string message = 3;
}

// PromptSuggestion
message PromptSuggestionRequest {
    // input text
	  string text = 1;
}

message PromptSuggestionReply {
    // prompt suggestion list
	  repeated Suggestion prompts = 1;
    // how many suggestion will be returned
    int64 num = 2;
}

message Suggestion {
    // prompt suggestion
    string prompt = 1;
}

// GetHostsState
message GetHostsStateRequest {
    int64 start_time = 1;
    int64 end_time = 2;
}

message GetHostsStateReply {
    string domain = 1;
    repeated HostState hosts_state = 2;
}

message HostState {
    string record_id = 1;
    string timestamp = 2;
    string application = 3;
    string host = 4;
    string operation = 5;
    int64 avg_op_time = 6;
}

// GetHostsActivity
message GetHostsActivityRequest {
    int64 start_time = 1;
    int64 end_time = 2;
}

message GetHostsActivityReply {
    string domain = 1;
    repeated HostActivity hosts_activity = 2;
}

message HostActivity {
    string record_id = 1;
    string timestamp = 2;
    int64 host_num = 3;
    int64 host_activity_num = 4;
    int64 host_idle_num = 5;
    string host_activity_ips = 6;
}

//  GetRagKeywords
message GetRagKeywordsRequest {
    string text = 1;
}

message GetRagKeywordsReply {
    repeated string keywords = 1;
}

// GetNetworkError
message GetNetworkErrorRequest {
    int64 start_time = 1;
    int64 end_time = 2;
}

message GetNetworkErrorReply {
    string domain = 1;
    repeated NetworkError network_error = 2;
}

message NetworkError {
    string timestamp = 1;
    string port = 2;
    int64 rx_drops = 3;
    int64 tx_drops = 4;
    int64 rx_errors = 5;
    int64 tx_errors = 6;
}

// GetCpuState
message GetCpuStateRequest {
    int64 start_time = 1;
    int64 end_time = 2;
}

message GetCpuStateReply {
    string domain = 1;
    CpuState cpu_state = 2;
}

message CpuState {
    CpuUtilization cpu_utilization = 1;
    repeated CpuUsage cpu_usage = 2;
}

message CpuUtilization {
    string server = 1;
    AverageUtilization average_utilization = 2;
    PeakUtilization peak_utilization = 3;
    BreakdownUtilization breakdown_utilization = 4;
}

message AverageUtilization {
    string value = 1;
}

message PeakUtilization {
    string value = 1;
    string time = 2;
}

message BreakdownUtilization {
    string user_time = 1;
    string system_time = 2;
}

message CpuUsage {
    string app_name = 1;
    string usage = 2;
}

service Copilot {
  rpc PromptSuggestion (PromptSuggestionRequest) returns (PromptSuggestionReply) {
    option (google.api.http) = {
      post: "/copilot/prompt/suggestion"
      body: "*"
    };
  }

  rpc GetSecurityAbnormalUser (GetSecurityAbnormalUserRequest) returns (GetSecurityAbnormalUserReply) {
    option (google.api.http) = {
      post: "/copilot/security/user"
      body: "*"
    };
  }

  rpc GetHostsState (GetHostsStateRequest) returns (GetHostsStateReply) {
    option (google.api.http) = {
      post: "/copilot/obs/hosts/state"
      body: "*"
    };
  }

  rpc GetHostsActivity (GetHostsActivityRequest) returns (GetHostsActivityReply) {
    option (google.api.http) = {
      post: "/copilot/obs/hosts/activity"
      body: "*"
    };
  }

  rpc GetRagKeywords (GetRagKeywordsRequest) returns (GetRagKeywordsReply) {
    option (google.api.http) = {
      post: "/copilot/rag/search/keyword"
      body: "*"
    };
  }

  rpc GetNetworkError (GetNetworkErrorRequest) returns (GetNetworkErrorReply) {
    option (google.api.http) = {
      post: "/copilot/obs/network/error"
      body: "*"
    };
  }

  rpc GetCpuState (GetCpuStateRequest) returns (GetCpuStateReply) {
    option (google.api.http) = {
      post: "/copilot/obs/cpu/state"
      body: "*"
    };
  }
}


